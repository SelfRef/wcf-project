<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GameWindow</name>
    </assembly>
    <members>
        <member name="M:GameWindow.Objects.Camera2D.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            The constructor for the Camera2D class.
            </summary>
            <param name="graphics"></param>
        </member>
        <member name="P:GameWindow.Objects.Camera2D.Position">
            <summary>
            The current position of the camera.
            </summary>
        </member>
        <member name="P:GameWindow.Objects.Camera2D.MinPosition">
            <summary>
            The furthest up, and the furthest left the camera can go.
            if this value equals maxPosition, then no clamping will be 
            applied (unless you override that function).
            </summary>
        </member>
        <member name="P:GameWindow.Objects.Camera2D.MaxPosition">
            <summary>
            the furthest down, and the furthest right the camera will go.
            if this value equals minPosition, then no clamping will be 
            applied (unless you override that function).
            </summary>
        </member>
        <member name="P:GameWindow.Objects.Camera2D.Rotation">
            <summary>
            The current rotation of the camera in radians.
            </summary>
        </member>
        <member name="P:GameWindow.Objects.Camera2D.MinRotation">
            <summary>
            Gets or sets the minimum rotation in radians.
            </summary>
            <value>The min rotation.</value>
        </member>
        <member name="P:GameWindow.Objects.Camera2D.MaxRotation">
            <summary>
            Gets or sets the maximum rotation in radians.
            </summary>
            <value>The max rotation.</value>
        </member>
        <member name="P:GameWindow.Objects.Camera2D.Zoom">
            <summary>
            The current rotation of the camera in radians.
            </summary>
        </member>
        <member name="P:GameWindow.Objects.Camera2D.TrackingBody">
            <summary>
            the body that this camera is currently tracking. 
            Null if not tracking any.
            </summary>
        </member>
        <member name="M:GameWindow.Objects.Camera2D.ResetCamera">
            <summary>
            Resets the camera to default values.
            </summary>
        </member>
        <member name="M:GameWindow.Objects.Camera2D.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Moves the camera forward one timestep.
            </summary>
        </member>
        <member name="P:GameWindow.Objects.Container.Connection">
            <summary>
            Connection object.
            </summary>
        </member>
        <member name="P:GameWindow.Objects.Container.Manager">
            <summary>
            Scene manager object.
            </summary>
        </member>
        <member name="P:GameWindow.Objects.Container.Name">
            <summary>
            Name of current player.
            </summary>
        </member>
        <member name="P:GameWindow.Objects.Container.Map">
            <summary>
            Tile map.
            </summary>
        </member>
        <member name="P:GameWindow.Objects.Container.World">
            <summary>
            World object contains all phisics objects.
            </summary>
        </member>
        <member name="P:GameWindow.Objects.Container.PlayersObj">
            <summary>
            Contains game bodies of players.
            </summary>
        </member>
        <member name="P:GameWindow.Objects.Container.ObjectsObj">
            <summary>
            Contains all other bodies.
            </summary>
        </member>
        <member name="P:GameWindow.Objects.Container.Players">
            <summary>
            Updated list of Player objects from server.
            </summary>
        </member>
        <member name="P:GameWindow.Objects.Container.Objects">
            <summary>
            Updated list of other objects from server.
            </summary>
        </member>
        <member name="P:GameWindow.Objects.Container.HumanTS">
            <summary>
            Tileset with pedestrian texture.
            </summary>
        </member>
        <member name="P:GameWindow.Objects.Container.CarTX">
            <summary>
            Texture of cars.
            </summary>
        </member>
        <member name="P:GameWindow.Objects.Container.FontTX">
            <summary>
            Font texture.
            </summary>
        </member>
        <member name="P:GameWindow.Objects.Container.DotTX">
            <summary>
            Just dot. Nothing more.
            </summary>
        </member>
        <member name="M:GameWindow.Objects.Container.#ctor(GameWindow.GameScenes.SceneManager,WCFReference.IConnection)">
            <summary>
            Provides container for better managing game methods.
            </summary>
            <param name="manager">Screen manager.</param>
            <param name="con">Connection object.</param>
        </member>
        <member name="M:GameWindow.Objects.Container.Update(Microsoft.Xna.Framework.GameTime,GameWindow.Objects.Camera2D,Microsoft.Xna.Framework.Input.KeyboardState,Microsoft.Xna.Framework.Input.KeyboardState,Microsoft.Xna.Framework.Input.MouseState,Microsoft.Xna.Framework.Input.MouseState)">
            <summary>
            Update step in game world.
            </summary>
            <param name="gameTime">Time span object.</param>
            <param name="cam">Camera object.</param>
            <param name="keys">Current keyboard state.</param>
            <param name="prevKeys">Previous keyboard state.</param>
            <param name="mouse">Current mouse state.</param>
            <param name="prevMouse">Previous mouse state.</param>
        </member>
        <member name="M:GameWindow.Objects.Container.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Draw all Player and other objects to screen.
            </summary>
            <param name="spriteBatch">Drawing object.</param>
        </member>
        <member name="T:GameWindow.GameScenes.SceneManager">
            <summary>
            This is the main type for your game.
            </summary>
        </member>
        <member name="M:GameWindow.GameScenes.SceneManager.Initialize">
            <summary>
            Allows the game to perform any initialization it needs to before starting to run.
            This is where it can query for any required services and load any non-graphic
            related content.  Calling base.Initialize will enumerate through any components
            and initialize them as well.
            </summary>
        </member>
        <member name="M:GameWindow.GameScenes.SceneManager.LoadContent">
            <summary>
            LoadContent will be called once per game and is the place to load
            all of your content.
            </summary>
        </member>
        <member name="M:GameWindow.GameScenes.SceneManager.UnloadContent">
            <summary>
            UnloadContent will be called once per game and is the place to unload
            game-specific content.
            </summary>
        </member>
        <member name="M:GameWindow.GameScenes.SceneManager.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Allows the game to run logic such as updating the world,
            checking for collisions, gathering input, and playing audio.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="M:GameWindow.GameScenes.SceneManager.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            This is called when the game should draw itself.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="M:GameWindow.GameScenes.MainScene.LoadContent">
            <summary>
            Load a game content like textures and fonts.
            </summary>
        </member>
        <member name="M:GameWindow.GameScenes.MainScene.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Update everything like positions.
            </summary>
            <param name="gameTime">Time span object.</param>
        </member>
        <member name="M:GameWindow.GameScenes.MainScene.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draw it.
            </summary>
            <param name="gameTime">Time span object.</param>
        </member>
        <member name="T:GameWindow.Program">
            <summary>
            The main class.
            </summary>
        </member>
        <member name="M:GameWindow.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
    </members>
</doc>
